# Databricks notebook source
# MAGIC %md
# MAGIC 
# MAGIC # About Business area objects:
# MAGIC - these notebooks are very specific to each of the tasks they are performing
# MAGIC - maybe you don't need to use parameters
# MAGIC - don't worry if you're not generalizing enough

# COMMAND ----------

# MAGIC %md
# MAGIC 
# MAGIC <pre>
# MAGIC Processo	trs_biz_fta_enem_agregado
# MAGIC Tabela/Arquivo Origem	/biz/uniepro/fta_enem_agregado_notas
# MAGIC Tabela/Arquivo Destino	/biz/uniepro/fta_enem_agregado_notas_pivot
# MAGIC Particionamento Tabela/Arquivo Destino	NR_ANO
# MAGIC Descrição Tabela/Arquivo Destino	Base de matrículas da Educação Profissional
# MAGIC Tipo Atualização	A = append (insert)
# MAGIC Detalhe Atualização	Apenas inserir caso 'nr_ano_censo não existir na tabela, se existir não carregar.
# MAGIC Periodicidade/Horario Execução	Anual
# MAGIC </pre>

# COMMAND ----------

# MAGIC %md
# MAGIC ADLS DATA  ACCESS

# COMMAND ----------

from cni_connectors import adls_gen1_connector as adls_conn
import pyspark.sql.functions as f

# COMMAND ----------

# MAGIC %md
# MAGIC Common variable section. Declare useful variables here

# COMMAND ----------

var_adls_uri = adls_conn.adls_gen1_connect(spark, dbutils, scope="adls_gen1", dynamic_overwrite="dynamic")

# COMMAND ----------

# MAGIC %md
# MAGIC ## Business specific parameter section

# COMMAND ----------

import crawler.functions as cf

import json
import re

# COMMAND ----------

tables = json.loads(re.sub("\'", '\"', dbutils.widgets.get("tables")))
dls = json.loads(re.sub("\'", '\"', dbutils.widgets.get("dls")))
adf = json.loads(re.sub("\'", '\"', dbutils.widgets.get("adf")))
user_parameters = json.loads(re.sub("\'", '\"', dbutils.widgets.get("user_parameters")))

# COMMAND ----------

# # USE THIS ONLY FOR DEVELOPMENT PURPOSES

# tables =  {
#   "path_origin": "uniepro/fta_enem_agregado_notas",
#   "path_destination": "uniepro/fta_enem_agregado_notas_kpi",
#   "destination": "/uniepro/fta_enem_agregado_notas_kpi",
#   "databricks": {
#     "notebook": "/biz/inep_enem/fta_enem_agregado_notas_kpi"
#   }
# }

# dls = {"folders":{"landing":"/tmp/dev/lnd","error":"/tmp/dev/err","staging":"/tmp/dev/stg","log":"/tmp/dev/log","raw":"/tmp/dev/raw","trusted":"/trs","business":"/tmp/dev/biz"}}
# dls = {"folders":{"landing":"/lnd","error":"/err","staging":"/stg","log":"/log","raw":"/raw","trusted":"/trs","business":"/biz"}}

# adf = {
#   'adf_factory_name': 'development', 
#   'adf_pipeline_name': 'development',
#   'adf_pipeline_run_id': 'development',
#   'adf_trigger_id': 'development',
#   'adf_trigger_name': 'development',
#   'adf_trigger_time': '2020-05-26T17:57:06.0829994Z',
#   'adf_trigger_type': 'Manual'
# }

# COMMAND ----------

biz = dls['folders']['business']

# COMMAND ----------

source = "{adl_path}{biz}/{origin}".format(adl_path=var_adls_uri, biz=biz, origin=tables["path_origin"])
source

# COMMAND ----------

biz_target = "{biz}/{origin}".format(biz=biz, origin=tables["path_destination"])
target = "{adl_path}{biz_target}".format(adl_path=var_adls_uri, biz_target=biz_target)
target

# COMMAND ----------

df_source = spark.read.parquet(source)
df_source_columns = [('CD_DISTRITO', 'CO_DISTRITO'), ('CD_ENTIDADE', 'CO_ENTIDADE'), ('CD_MESORREGIAO', 'CO_MESORREGIAO'), ('CD_MICRORREGIAO', 'CO_MICRORREGIAO'), ('CD_MUNICIPIO', 'CO_MUNICIPIO'), ('CD_MUNICIPIO_ESC', 'CO_MUNICIPIO_ESC'), ('CD_MUNICIPIO_NASCIMENTO', 'CO_MUNICIPIO_NASCIMENTO'), ('CD_MUNICIPIO_PROVA', 'CO_MUNICIPIO_PROVA'), ('CD_MUNICIPIO_RESIDENCIA', 'CO_MUNICIPIO_RESIDENCIA'), ('CD_NOME_ENTIDADE', 'COD_NOME_ENTIDADE'), ('CD_PERFIL', 'PERFIL'), ('CD_PROVA_CH', 'CO_PROVA_CH'), ('CD_PROVA_CN', 'CO_PROVA_CN'), ('CD_PROVA_LC', 'CO_PROVA_LC'), ('CD_PROVA_MT', 'CO_PROVA_MT'), ('CD_REGIAO', 'CO_REGIAO'), ('CD_UF', 'CO_UF'), ('CD_UF_ENTIDADE_CERTIFICACAO', 'CO_UF_ENTIDADE_CERTIFICACAO'), ('CD_UF_ESC', 'CO_UF_ESC'), ('CD_UF_NASCIMENTO', 'CO_UF_NASCIMENTO'), ('CD_UF_PROVA', 'CO_UF_PROVA'), ('CD_UF_RESIDENCIA', 'CO_UF_RESIDENCIA'), ('NR_CEP', 'CEP'), ('VL_COM_3E4', 'COM_3E4'), ('DS_COMPLEMENTO', 'COMPLEMENTO'), ('DS_COR', 'COR'), ('DS_ENDERECO', 'ENDERECO'), ('DT_ANO', 'ANO'), ('FL_ESCOLA_FORA', 'ESCOLA_FORA'), ('FL_ESCOLA_SELECIONADA', 'ESCOLA_SELECIONADA'), ('FL_ESCOLA_SENAI', 'ESCOLA_SENAI'), ('FL_ESCOLA_SESI', 'ESCOLA_SESI'), ('FL_ESCOLA_SESI_SENAI', 'ESCOLA_SESI_SENAI'), ('DS_ESCOLAR_MAE', 'ESCOLAR_MAE'), ('FL_EXCLUI_PERFIL', 'EXCLUI_PERFIL'), ('FL_ACESSO', 'IN_ACESSO'), ('FL_AGUA_CACIMBA', 'IN_AGUA_CACIMBA'), ('FL_AGUA_FILTRADA', 'IN_AGUA_FILTRADA'), ('FL_AGUA_FONTE_RIO', 'IN_AGUA_FONTE_RIO'), ('FL_AGUA_INEXISTENTE', 'IN_AGUA_INEXISTENTE'), ('FL_AGUA_POCO_ARTESIANO', 'IN_AGUA_POCO_ARTESIANO'), ('FL_AGUA_REDE_PUBLICA', 'IN_AGUA_REDE_PUBLICA'), ('FL_ALIMENTACAO', 'IN_ALIMENTACAO'), ('FL_ALMOXARIFADO', 'IN_ALMOXARIFADO'), ('FL_AMPLIADA_18', 'IN_AMPLIADA_18'), ('FL_AMPLIADA_24', 'IN_AMPLIADA_24'), ('FL_APOIO_PERNA', 'IN_APOIO_PERNA'), ('FL_AREA_VERDE', 'IN_AREA_VERDE'), ('FL_AUDITORIO', 'IN_AUDITORIO'), ('FL_AUTISMO', 'IN_AUTISMO'), ('FL_BAIXA_VISAO', 'IN_BAIXA_VISAO'), ('FL_BANDA_LARGA', 'IN_BANDA_LARGA'), ('FL_BANHEIRO_CHUVEIRO', 'IN_BANHEIRO_CHUVEIRO'), ('FL_BANHEIRO_DENTRO_PREDIO', 'IN_BANHEIRO_DENTRO_PREDIO'), ('FL_BANHEIRO_EI', 'IN_BANHEIRO_EI'), ('FL_BANHEIRO_FORA_PREDIO', 'IN_BANHEIRO_FORA_PREDIO'), ('FL_BANHEIRO_PNE', 'IN_BANHEIRO_PNE'), ('FL_BERCARIO', 'IN_BERCARIO'), ('FL_BIBLIOTECA', 'IN_BIBLIOTECA'), ('FL_BIBLIOTECA_SALA_LEITURA', 'IN_BIBLIOTECA_SALA_LEITURA'), ('FL_BRAILLE', 'IN_BRAILLE'), ('FL_CADEIRA_ACOLCHOADA', 'IN_CADEIRA_ACOLCHOADA'), ('FL_CADEIRA_CANHOTO', 'IN_CADEIRA_CANHOTO'), ('FL_CADEIRA_ESPECIAL', 'IN_CADEIRA_ESPECIAL'), ('FL_CEGUEIRA', 'IN_CEGUEIRA'), ('FL_CERTIFICADO', 'IN_CERTIFICADO'), ('FL_COMPUTADOR', 'IN_COMPUTADOR'), ('FL_CONVENIADA_PP', 'IN_CONVENIADA_PP'), ('FL_COZINHA', 'IN_COZINHA'), ('FL_DEFICIENCIA_AUDITIVA', 'IN_DEFICIENCIA_AUDITIVA'), ('FL_DEFICIENCIA_FISICA', 'IN_DEFICIENCIA_FISICA'), ('FL_DEFICIENCIA_MENTAL', 'IN_DEFICIENCIA_MENTAL'), ('FL_DEFICIT_ATENCAO', 'IN_DEFICIT_ATENCAO'), ('FL_DEPENDENCIAS_OUTRAS', 'IN_DEPENDENCIAS_OUTRAS'), ('FL_DEPENDENCIAS_PNE', 'IN_DEPENDENCIAS_PNE'), ('FL_DESPENSA', 'IN_DESPENSA'), ('FL_DISCALCULIA', 'IN_DISCALCULIA'), ('FL_DISLEXIA', 'IN_DISLEXIA'), ('FL_ENERGIA_GERADOR', 'IN_ENERGIA_GERADOR'), ('FL_ENERGIA_INEXISTENTE', 'IN_ENERGIA_INEXISTENTE'), ('FL_ENERGIA_OUTROS', 'IN_ENERGIA_OUTROS'), ('FL_ENERGIA_REDE_PUBLICA', 'IN_ENERGIA_REDE_PUBLICA'), ('FL_EQUIP_COPIADORA', 'IN_EQUIP_COPIADORA'), ('FL_EQUIP_DVD', 'IN_EQUIP_DVD'), ('FL_EQUIP_FAX', 'IN_EQUIP_FAX'), ('FL_EQUIP_FOTO', 'IN_EQUIP_FOTO'), ('FL_EQUIP_IMPRESSORA', 'IN_EQUIP_IMPRESSORA'), ('FL_EQUIP_IMPRESSORA_MULT', 'IN_EQUIP_IMPRESSORA_MULT'), ('FL_EQUIP_MULTIMIDIA', 'IN_EQUIP_MULTIMIDIA'), ('FL_EQUIP_PARABOLICA', 'IN_EQUIP_PARABOLICA'), ('FL_EQUIP_RETROPROJETOR', 'IN_EQUIP_RETROPROJETOR'), ('FL_EQUIP_SOM', 'IN_EQUIP_SOM'), ('FL_EQUIP_TV', 'IN_EQUIP_TV'), ('FL_EQUIP_VIDEOCASSETE', 'IN_EQUIP_VIDEOCASSETE'), ('FL_ESGOTO_FOSSA', 'IN_ESGOTO_FOSSA'), ('FL_ESGOTO_INEXISTENTE', 'IN_ESGOTO_INEXISTENTE'), ('FL_ESGOTO_REDE_PUBLICA', 'IN_ESGOTO_REDE_PUBLICA'), ('FL_ESTUDA_CLASSE_HOSPITALAR', 'IN_ESTUDA_CLASSE_HOSPITALAR'), ('FL_GESTANTE', 'IN_GESTANTE'), ('FL_GUIA_INTERPRETE', 'IN_GUIA_INTERPRETE'), ('FL_IDOSO', 'IN_IDOSO'), ('FL_INTERNET', 'IN_INTERNET'), ('FL_LABORATORIO_CIENCIAS', 'IN_LABORATORIO_CIENCIAS'), ('FL_LABORATORIO_INFORMATICA', 'IN_LABORATORIO_INFORMATICA'), ('FL_LACTANTE', 'IN_LACTANTE'), ('FL_LAMINA_OVERLAY', 'IN_LAMINA_OVERLAY'), ('FL_LAVANDERIA', 'IN_LAVANDERIA'), ('FL_LEDOR', 'IN_LEDOR'), ('FL_LEITURA_LABIAL', 'IN_LEITURA_LABIAL'), ('FL_LIBRAS', 'IN_LIBRAS'), ('FL_LIXO_ENTERRA', 'IN_LIXO_ENTERRA'), ('FL_LIXO_JOGA_OUTRA_AREA', 'IN_LIXO_JOGA_OUTRA_AREA'), ('FL_LIXO_OUTROS', 'IN_LIXO_OUTROS'), ('FL_LIXO_QUEIMA', 'IN_LIXO_QUEIMA'), ('FL_LIXO_RECICLA', 'IN_LIXO_RECICLA'), ('FL_LOCAL_FUNC_CASA_PROFESSOR', 'IN_LOCAL_FUNC_CASA_PROFESSOR'), ('FL_LOCAL_FUNC_GALPAO', 'IN_LOCAL_FUNC_GALPAO'), ('FL_LOCAL_FUNC_OUTROS', 'IN_LOCAL_FUNC_OUTROS'), ('FL_LOCAL_FUNC_PREDIO_ESCOLAR', 'IN_LOCAL_FUNC_PREDIO_ESCOLAR'), ('FL_LOCAL_FUNC_PRISIONAL_SOCIO', 'IN_LOCAL_FUNC_PRISIONAL_SOCIO'), ('FL_LOCAL_FUNC_SALAS_EMPRESA', 'IN_LOCAL_FUNC_SALAS_EMPRESA'), ('FL_LOCAL_FUNC_SALAS_OUTRA_ESC', 'IN_LOCAL_FUNC_SALAS_OUTRA_ESC'), ('FL_LOCAL_FUNC_SOCIOEDUCATIVO', 'IN_LOCAL_FUNC_SOCIOEDUCATIVO'), ('FL_LOCAL_FUNC_TEMPLO_IGREJA', 'IN_LOCAL_FUNC_TEMPLO_IGREJA'), ('FL_LOCAL_FUNC_UNID_PRISIONAL', 'IN_LOCAL_FUNC_UNID_PRISIONAL'), ('FL_MACA', 'IN_MACA'), ('FL_MANT_ESCOLA_PRIVADA_EMP', 'IN_MANT_ESCOLA_PRIVADA_EMP'), ('FL_MANT_ESCOLA_PRIVADA_ONG', 'IN_MANT_ESCOLA_PRIVADA_ONG'), ('FL_MANT_ESCOLA_PRIVADA_SIND', 'IN_MANT_ESCOLA_PRIVADA_SIND'), ('FL_MANT_ESCOLA_PRIVADA_SIST_S', 'IN_MANT_ESCOLA_PRIVADA_SIST_S'), ('FL_MAQUINA_BRAILE', 'IN_MAQUINA_BRAILE'), ('FL_MARCA_PASSO', 'IN_MARCA_PASSO'), ('FL_MATERIAL_ESPECIFICO', 'IN_MATERIAL_ESPECIFICO'), ('FL_MEDICAMENTOS', 'IN_MEDICAMENTOS'), ('FL_MEDIDOR_GLICOSE', 'IN_MEDIDOR_GLICOSE'), ('FL_MESA_CADEIRA_RODAS', 'IN_MESA_CADEIRA_RODAS'), ('FL_MESA_CADEIRA_SEPARADA', 'IN_MESA_CADEIRA_SEPARADA'), ('FL_MOBILIARIO_ESPECIFICO', 'IN_MOBILIARIO_ESPECIFICO'), ('FL_MOBILIARIO_OBESO', 'IN_MOBILIARIO_OBESO'), ('FL_NOME_SOCIAL', 'IN_NOME_SOCIAL'), ('FL_OUTRA_DEF', 'IN_OUTRA_DEF'), ('FL_PARQUE_INFANTIL', 'IN_PARQUE_INFANTIL'), ('FL_PATIO_COBERTO', 'IN_PATIO_COBERTO'), ('FL_PATIO_DESCOBERTO', 'IN_PATIO_DESCOBERTO'), ('FL_PREDIO_COMPARTILHADO', 'IN_PREDIO_COMPARTILHADO'), ('FL_PROTETOR_AURICULAR', 'IN_PROTETOR_AURICULAR'), ('FL_PROVA_DEITADO', 'IN_PROVA_DEITADO'), ('FL_QUADRA_ESPORTES', 'IN_QUADRA_ESPORTES'), ('FL_QUADRA_ESPORTES_COBERTA', 'IN_QUADRA_ESPORTES_COBERTA'), ('FL_QUADRA_ESPORTES_DESCOBERTA', 'IN_QUADRA_ESPORTES_DESCOBERTA'), ('FL_REFEITORIO', 'IN_REFEITORIO'), ('FL_SABATISTA', 'IN_SABATISTA'), ('FL_SALA_ACOMPANHANTE', 'IN_SALA_ACOMPANHANTE'), ('FL_SALA_ATENDIMENTO_ESPECIAL', 'IN_SALA_ATENDIMENTO_ESPECIAL'), ('FL_SALA_DIRETORIA', 'IN_SALA_DIRETORIA'), ('FL_SALA_ESPECIAL', 'IN_SALA_ESPECIAL'), ('FL_SALA_INDIVIDUAL', 'IN_SALA_INDIVIDUAL'), ('FL_SALA_LEITURA', 'IN_SALA_LEITURA'), ('FL_SALA_PROFESSOR', 'IN_SALA_PROFESSOR'), ('FL_SECRETARIA', 'IN_SECRETARIA'), ('FL_SEM_RECURSO', 'IN_SEM_RECURSO'), ('FL_SONDA', 'IN_SONDA'), ('FL_SOROBAN', 'IN_SOROBAN'), ('FL_SURDEZ', 'IN_SURDEZ'), ('FL_SURDO_CEGUEIRA', 'IN_SURDO_CEGUEIRA'), ('FL_TRANSCRICAO', 'IN_TRANSCRICAO'), ('FL_TREINEIRO', 'IN_TREINEIRO'), ('FL_VISAO_MONOCULAR', 'IN_VISAO_MONOCULAR'), ('DS_GENERO', 'GENERO'), ('DS_IDADE', 'IDADE'), ('DS_INSE', 'INSE'), ('QT_MATRIC_EM3', 'MATRIC_EM3_SUM'), ('QT_MATRIC_EM4', 'MATRIC_EM4_SUM'), ('FL_MATRIC10', 'MATRIC10'), ('NM_BAIRRO', 'BAIRRO'), ('NM_ENTIDADE', 'NO_ENTIDADE'), ('NM_ENTIDADE_CERTIFICACAO', 'NO_ENTIDADE_CERTIFICACAO'), ('NM_MUNICIPIO_ESC', 'NO_MUNICIPIO_ESC'), ('NM_MUNICIPIO_NASCIMENTO', 'NO_MUNICIPIO_NASCIMENTO'), ('NM_MUNICIPIO_PROVA', 'NO_MUNICIPIO_PROVA'), ('NM_MUNICIPIO_RESIDENCIA', 'NO_MUNICIPIO_RESIDENCIA'), ('NM_NOME_ESCOLA', 'NOME_ESCOLA'), ('NM_NOME_UNIDADE', 'NOME_UNIDADE'), ('NM_NOMEDOMUNICÍPIO', 'NOMEDOMUNICÍPIO'), ('NR_ANM_CENSO', 'NU_ANO_CENSO'), ('NR_ANO', 'NU_ANO'), ('NR_COMP_ADMINISTRATIVO', 'NU_COMP_ADMINISTRATIVO'), ('NR_COMP_ALUNO', 'NU_COMP_ALUNO'), ('NR_COMPUTADOR', 'NU_COMPUTADOR'), ('NR_EQUIP_COPIADORA', 'NU_EQUIP_COPIADORA'), ('NR_EQUIP_DVD', 'NU_EQUIP_DVD'), ('NR_EQUIP_FAX', 'NU_EQUIP_FAX'), ('NR_EQUIP_FOTO', 'NU_EQUIP_FOTO'), ('NR_EQUIP_IMPRESSORA', 'NU_EQUIP_IMPRESSORA'), ('NR_EQUIP_IMPRESSORA_MULT', 'NU_EQUIP_IMPRESSORA_MULT'), ('NR_EQUIP_MULTIMIDIA', 'NU_EQUIP_MULTIMIDIA'), ('NR_EQUIP_PARABOLICA', 'NU_EQUIP_PARABOLICA'), ('NR_EQUIP_RETROPROJETOR', 'NU_EQUIP_RETROPROJETOR'), ('NR_EQUIP_SOM', 'NU_EQUIP_SOM'), ('NR_EQUIP_TV', 'NU_EQUIP_TV'), ('NR_EQUIP_VIDEOCASSETE', 'NU_EQUIP_VIDEOCASSETE'), ('NR_FUNCIONARIOS', 'NU_FUNCIONARIOS'), ('NR_IDADE', 'NU_IDADE'), ('NR_INSCRICAO', 'NU_INSCRICAO'), ('NR_MATRIC_CONC', 'NU_MATRIC_CONC'), ('NR_MATRICULAS', 'NU_MATRICULAS'), ('NR_MEDIA_OBJ', 'NU_MEDIA_OBJ'), ('NR_MEDIA_TOT', 'NU_MEDIA_TOT'), ('NR_NOTA_CH', 'NU_NOTA_CH'), ('NR_NOTA_CN', 'NU_NOTA_CN'), ('NR_NOTA_COMP1', 'NU_NOTA_COMP1'), ('NR_NOTA_COMP2', 'NU_NOTA_COMP2'), ('NR_NOTA_COMP3', 'NU_NOTA_COMP3'), ('NR_NOTA_COMP4', 'NU_NOTA_COMP4'), ('NR_NOTA_COMP5', 'NU_NOTA_COMP5'), ('NR_NOTA_ENEM_GERAL_ESCOLA_COM_REDAC', 'NOTA_ENEM_GERAL_ESCOLA_COM_REDAC'), ('NR_NOTA_ENEM_GERAL_ESCOLA_SEM_REDAC', 'NOTA_ENEM_GERAL_ESCOLA_SEM_REDAC'), ('NR_NOTA_GERAL', 'NU_NOTA_GERAL'), ('NR_NOTA_GERAL_REDAC', 'NU_NOTA_GERAL_REDAC'), ('NR_NOTA_LC', 'NU_NOTA_LC'), ('NR_NOTA_MT', 'NU_NOTA_MT'), ('NR_NOTA_REDACAO', 'NU_NOTA_REDACAO'), ('NR_NUMERACAO', 'NUMERACAO'), ('NR_PARTICIPANTES', 'NU_PARTICIPANTES'), ('NR_PARTICIPANTES_NEC_ESP', 'NU_PARTICIPANTES_NEC_ESP'), ('NR_SALAS_EXISTENTES', 'NU_SALAS_EXISTENTES'), ('NR_SALAS_UTILIZADAS', 'NU_SALAS_UTILIZADAS'), ('NR_TAXA_ABANDONO', 'NU_TAXA_ABANDONO'), ('NR_TAXA_APROVACAO', 'NU_TAXA_APROVACAO'), ('NR_TAXA_PARTICIPACAO', 'NU_TAXA_PARTICIPACAO'), ('NR_TAXA_PERMANENCIA', 'NU_TAXA_PERMANENCIA'), ('NR_TAXA_REPROVACAO', 'NU_TAXA_REPROVACAO'), ('PC_FORMACAO_DOCENTE', 'PC_FORMACAO_DOCENTE'), ('DS_PORTE_ESCOLA', 'PORTE_ESCOLA'), ('SG_UF_ENTIDADE_CERTIFICACAO', 'SG_UF_ENTIDADE_CERTIFICACAO'), ('SG_UF_ESC', 'SG_UF_ESC'), ('SG_UF_NASCIMENTO', 'SG_UF_NASCIMENTO'), ('SG_UF_PROVA', 'SG_UF_PROVA'), ('SG_UF_RESIDENCIA', 'SG_UF_RESIDENCIA'), ('VL_TOT_ALUNOS_ENEM_ESCOLA', 'TOT_ALUNOS_ENEM_ESCOLA'), ('TP_AEE', 'TP_AEE'), ('TP_ANO_CONCLUIU', 'TP_ANO_CONCLUIU'), ('TP_ATIVIDADE_COMPLEMENTAR', 'TP_ATIVIDADE_COMPLEMENTAR'), ('TP_CATEGORIA_ESCOLA_PRIVADA', 'TP_CATEGORIA_ESCOLA_PRIVADA'), ('TP_CONVENIO_PODER_PUBLICO', 'TP_CONVENIO_PODER_PUBLICO'), ('TP_COR_RACA', 'TP_COR_RACA'), ('TP_DEPENDENCIA', 'TP_DEPENDENCIA'), ('TP_DEPENDENCIA_ADM_ESC', 'TP_DEPENDENCIA_ADM_ESC'), ('TP_ENSINO', 'TP_ENSINO'), ('TP_ESCOLA', 'TP_ESCOLA'), ('TP_ESTADO_CIVIL', 'TP_ESTADO_CIVIL'), ('TP_LINGUA', 'TP_LINGUA'), ('TP_LOCALIZACAO', 'TP_LOCALIZACAO'), ('TP_LOCALIZACAO_ESC', 'TP_LOCALIZACAO_ESC'), ('TP_NACIONALIDADE', 'TP_NACIONALIDADE'), ('TP_OCUPACAO_GALPAO', 'TP_OCUPACAO_GALPAO'), ('TP_OCUPACAO_PREDIO_ESCOLAR', 'TP_OCUPACAO_PREDIO_ESCOLAR'), ('TP_PRESENCA_CH', 'TP_PRESENCA_CH'), ('TP_PRESENCA_CN', 'TP_PRESENCA_CN'), ('TP_PRESENCA_LC', 'TP_PRESENCA_LC'), ('TP_PRESENCA_MT', 'TP_PRESENCA_MT'), ('TP_SEXO', 'TP_SEXO'), ('TP_SIT_FUNC_ESC', 'TP_SIT_FUNC_ESC'), ('TP_SITUACAO_FUNCIONAMENTO', 'TP_SITUACAO_FUNCIONAMENTO'), ('TP_ST_CONCLUSAO', 'TP_ST_CONCLUSAO'), ('TP_STATUS_REDACAO', 'TP_STATUS_REDACAO'), ('TX_GABARITO_CH', 'TX_GABARITO_CH'), ('TX_GABARITO_CN', 'TX_GABARITO_CN'), ('TX_GABARITO_LC', 'TX_GABARITO_LC'), ('TX_GABARITO_MT', 'TX_GABARITO_MT'), ('TX_RESPOSTAS_CH', 'TX_RESPOSTAS_CH'), ('TX_RESPOSTAS_CN', 'TX_RESPOSTAS_CN'), ('TX_RESPOSTAS_LC', 'TX_RESPOSTAS_LC'), ('TX_RESPOSTAS_MT', 'TX_RESPOSTAS_MT'), ('VL_Q001', 'Q001'), ('VL_Q002', 'Q002'), ('VL_Q003', 'Q003'), ('VL_Q004', 'Q004'), ('VL_Q005', 'Q005'), ('VL_Q006', 'Q006'), ('VL_Q007', 'Q007'), ('VL_Q008', 'Q008'), ('VL_Q009', 'Q009'), ('VL_Q010', 'Q010'), ('VL_Q011', 'Q011'), ('VL_Q012', 'Q012'), ('VL_Q013', 'Q013'), ('VL_Q014', 'Q014'), ('VL_Q015', 'Q015'), ('VL_Q016', 'Q016'), ('VL_Q017', 'Q017'), ('VL_Q018', 'Q018'), ('VL_Q019', 'Q019'), ('VL_Q020', 'Q020'), ('VL_Q021', 'Q021'), ('VL_Q022', 'Q022'), ('VL_Q023', 'Q023'), ('VL_Q024', 'Q024'), ('VL_Q025', 'Q025'), ('VL_Q026', 'Q026'), ('VL_Q027', 'Q027'), ('VL_Q028', 'Q028'), ('VL_Q029', 'Q029'), ('VL_Q030', 'Q030'), ('VL_Q031', 'Q031'), ('VL_Q032', 'Q032'), ('VL_Q033', 'Q033'), ('VL_Q034', 'Q034'), ('VL_Q035', 'Q035'), ('VL_Q036', 'Q036'), ('VL_Q037', 'Q037'), ('VL_Q038', 'Q038'), ('VL_Q039', 'Q039'), ('VL_Q040', 'Q040'), ('VL_Q041', 'Q041'), ('VL_Q042', 'Q042'), ('VL_Q043', 'Q043'), ('VL_Q044', 'Q044'), ('VL_Q045', 'Q045'), ('VL_Q048', 'Q048'), ('VL_Q049', 'Q049'), ('VL_Q050', 'Q050')]

df_source_columns = (f.col(col).alias(ren) for col, ren in df_source_columns)
df = df_source.select(*df_source_columns)

# COMMAND ----------

df.write.partitionBy('NU_ANO').parquet(target, mode='overwrite')