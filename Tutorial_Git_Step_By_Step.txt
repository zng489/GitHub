# git init

# git config --global user.email "zhang489@hotmail.com"

# git config --global user.password "28github"

# git clone https://github.com/zng489/GitHub.git

# git branch

# git checkout -b <new_branch_name>

# git status

# git add .

# git commit -m "your commit"

# git push -u origin branch_testing

######################################################################################

>> From https://github.com/zng489/azure_blob_storage
>>  * branch            main       -> FETCH_HEAD
>> $ git add .
>> $ git commit -m "message"
>> $ git push branch_named master:main
>> or
>> $ git push --force branch_named master:main

>> To clone
>> $ git init
>> $ git clone url


git reset 8c1338744180ae68756b4f81cec0c599fba7f412

# Interactive rebase to the commit before the one containing the secret
git rebase -i 8c1338744180ae68756b4f81cec0c599fba7f412^

remote:          - commit: 8c1338744180ae68756b4f81cec0c599fba7f412
esc
:wq 

# This will open an editor. Change 'pick' to 'edit' for the commit containing the secret
# Save and close the editor

# Now remove the sensitive file from git history
git rm --cached airflow_scheduler_webserver/dags/azure.py


git log
git revert aad850d0cb5129012949d51378254fb460dff62c 



git log
git reset --hard HEAD~1
git log
git status
git add .
git commit -m
git push....




>> git init

>> git config --global user.email "zhang489@hotmail.com"

>> git config --global user.password "28github"

>> git remote add origin https://github.com/zng489/GitHub.git

>> git fetch origin
From https://github.com/zng489/GitHub
 * [new branch]      branch_testing -> origin/branch_testing
 * [new branch]      master         -> origin/master
 * [new branch]      origin         -> origin/origin
 * [new branch]      uniepro        -> origin/uniepro

>> git pull origin branch_testing
>> git pull origin master
>> git pull origin <branch name>

>> git status

>> git add .

>> git commit -m "your commit"

>> If you wanna it
>> git checkout -b <new_branch_name>

>> git push <remote_name> <local_branch_name>:<remote_branch_name>
>> git push --force origin master /sniper-frontend-develop (master) :main (git)
>> git push --force origin back_end:git_back_end
>> git push origin master:master
>> git push origin new_branch:master



git inti
git config --global user.email "zhang489@hotmail.com"
git config --global user.password "##github"

# For remote branches
git remote add [origin]https://github.com/zng489/GitHub.git
git fetch [origin]
git remote show 
git pull [origin] [main]
git status
git add .

git commit -m "testing"
git push [origin] [master]:[main]






>> $ git init
>> $ git config --global user.email "zhang489@hotmail.com"
>> $ git config --global user.password "28github"
>> $ git remote add branch_named https://github.com/zng489/azure_blob_storage
>> $ git fetch branch_named
>> $ git pull branch_named main
>> From https://github.com/zng489/azure_blob_storage
>>  * branch            main       -> FETCH_HEAD
>> $ git add .
>> $ git commit -m "message"
>> $ git push branch_named master:main
>> or
>> $ git push --force branch_named master:main

>> To clone
>> $ git init
>> $ git clone url

>> git clone --branch branch-name --single-branch REPO_URL
>> git clone https://github.com/usuario/repo.git
>> cd repo
>> git checkout minha-branch

>> git clone --branch minha-branch --single-branch https://github.com/usuario/repo.git


######################################################################################
######################################################################################
>> $ git init
>> $ git config --global user.email "zhang489@hotmail.com"
>> $ git config --global user.password "28github"
>> $ git remote add branch_named https://github.com/zng489/azure_blob_storage
>> $ git fetch branch_named
>> $ git pull branch_named main
>> From https://github.com/zng489/azure_blob_storage
>>  * branch            main       -> FETCH_HEAD
>> $ git add .
>> $ git commit -m "message"
>> $ git push branch_named master:main
>> or
>> $ git push --force branch_named master:main

>> To clone
>> $ git init
>> $ git clone url


git reset 8c1338744180ae68756b4f81cec0c599fba7f412

# Interactive rebase to the commit before the one containing the secret
git rebase -i 8c1338744180ae68756b4f81cec0c599fba7f412^

remote:          - commit: 8c1338744180ae68756b4f81cec0c599fba7f412
esc
:wq 

# This will open an editor. Change 'pick' to 'edit' for the commit containing the secret
# Save and close the editor

# Now remove the sensitive file from git history
git rm --cached airflow_scheduler_webserver/dags/azure.py


git log
git revert aad850d0cb5129012949d51378254fb460dff62c 



git log
git reset --hard HEAD~1
git log
git status
git add .
git commit -m
git push....
